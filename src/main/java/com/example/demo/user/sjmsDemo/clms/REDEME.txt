策略模式：就是将具备统一任务属性的一类业务逻辑进行封装，调用方可以根据自身的业务场景和需要，进行策略的业务调用。
策略模式的使用场景为把算法实现进行提取封装，独立于调用场景之外。

策略模式的优点：
1、当业务代码存在多重逻辑判断时，策略模式可以避免大量的if-else的判断，避免代码逻辑混乱，增强代码的可维护性；
2、可将策略中的公共部分进行高度抽象，避免代码重复；

策略模式的缺点：
1、调用方必须知道所有的策略实现类，增加了调用方的使用难度；
2、如果判断逻辑较多的话，会导致策略实现类较多；




